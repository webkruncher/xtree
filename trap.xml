<?xml version="1.0" encoding="UTF-8"?>

<?xml-stylesheet type="text/xsl" href="./trees.xslt"?>

<Tree>	<Item 
		insrt="true"
	><key><![CDATA[Bee]]></key><Number>0</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Ezra]]></key>		<RotateLeft><key><![CDATA[Bee]]></key><key><![CDATA[Ezra]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source></RotateLeft><Number>1</Number>		<RotateRight><key><![CDATA[Son]]></key><key><![CDATA[Ezra]]></key><Source line="229" file="./tree.h" ><![CDATA[			root = other;]]></Source></RotateRight>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Avis]]></key><Number>1</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Illa]]></key><Number>1</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Asha]]></key>		<RotateRight><key><![CDATA[Bee]]></key><key><![CDATA[Avis]]></key><Source line="232" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Right() ) node->Parent()->SetRight(other);]]></Source></RotateRight><Number>2</Number>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Liza]]></key>		<RotateLeft><key><![CDATA[Illa]]></key><key><![CDATA[Liza]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source></RotateLeft><Number>2</Number>		<RotateRight><key><![CDATA[Son]]></key><key><![CDATA[Liza]]></key><Source line="232" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Right() ) node->Parent()->SetRight(other);]]></Source></RotateRight>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Ling]]></key><Number>2</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Zada]]></key><Number>2</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Moon]]></key><Number>2</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Nida]]></key>		<RotateLeft><key><![CDATA[Ezra]]></key><key><![CDATA[Liza]]></key><Source line="203" file="./tree.h" ><![CDATA[			root = other;]]></Source></RotateLeft><Number>3</Number>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Luci]]></key><Number>2</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Jeff]]></key>		<RotateRight><key><![CDATA[Ling]]></key><key><![CDATA[Jeff]]></key><Source line="232" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Right() ) node->Parent()->SetRight(other);]]></Source></RotateRight><Number>3</Number>		<RotateLeft><key><![CDATA[Illa]]></key><key><![CDATA[Jeff]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source></RotateLeft>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Hwa]]></key><Number>3</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Tuan]]></key><Number>2</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Susy]]></key>		<RotateRight><key><![CDATA[Zada]]></key><key><![CDATA[Tuan]]></key><Source line="232" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Right() ) node->Parent()->SetRight(other);]]></Source></RotateRight><Number>3</Number>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Lyla]]></key><Number>3</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Eliz]]></key><Number>3</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Jed]]></key><Number>3</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Viki]]></key><Number>3</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Lacy]]></key><Number>3</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Rina]]></key><Number>3</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Ocie]]></key>		<RotateRight><key><![CDATA[Rina]]></key><key><![CDATA[Ocie]]></key><Source line="232" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Right() ) node->Parent()->SetRight(other);]]></Source></RotateRight><Number>4</Number>		<RotateLeft><key><![CDATA[Nida]]></key><key><![CDATA[Ocie]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source></RotateLeft>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Beau]]></key><Number>3</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Dirk]]></key><Number>4</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Jeni]]></key>		<RotateRight><key><![CDATA[Ling]]></key><key><![CDATA[Lacy]]></key><Source line="232" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Right() ) node->Parent()->SetRight(other);]]></Source></RotateRight><Number>4</Number>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Ling]]></key>		<Transplant><key><![CDATA[Ling]]></key><key><![CDATA[NIL]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source line="713" file="./tree.h" ><![CDATA[		return root;]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="4" line="682" file="./tree.h" ><![CDATA[			X=pfound->Right();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Tuan]]></key>		<Transplant><key><![CDATA[Viki]]></key><key><![CDATA[NIL]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source>		<Transplant><key><![CDATA[Tuan]]></key><key><![CDATA[Viki]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source line="713" file="./tree.h" ><![CDATA[		return root;]]></Source></Transplant><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="9" line="692" file="./tree.h" ><![CDATA[				Y=(pfound->Right()->LeftMost());							]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Avis]]></key>		<Transplant><key><![CDATA[Beau]]></key><key><![CDATA[NIL]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source>		<Transplant><key><![CDATA[Avis]]></key><key><![CDATA[Beau]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source></Transplant><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="9" line="692" file="./tree.h" ><![CDATA[				Y=(pfound->Right()->LeftMost());							]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Dirk]]></key>		<Transplant><key><![CDATA[Dirk]]></key><key><![CDATA[NIL]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source><Source line="713" file="./tree.h" ><![CDATA[		return root;]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="4" line="682" file="./tree.h" ><![CDATA[			X=pfound->Right();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Beau]]></key>		<Transplant><key><![CDATA[Beau]]></key><key><![CDATA[Bee]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source><Source line="713" file="./tree.h" ><![CDATA[		return root;]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="9" line="692" file="./tree.h" ><![CDATA[				Y=(pfound->Right()->LeftMost());							]]></Source><Source clrs="13" line="698" file="./tree.h" ><![CDATA[					X->SetParent(Y);														]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Bee]]></key>		<Transplant><key><![CDATA[Bee]]></key><key><![CDATA[Eliz]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="9" line="692" file="./tree.h" ><![CDATA[				Y=(pfound->Right()->LeftMost());							]]></Source><Source clrs="13" line="698" file="./tree.h" ><![CDATA[					X->SetParent(Y);														]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Jed]]></key>		<Transplant><key><![CDATA[Jed]]></key><key><![CDATA[NIL]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source line="713" file="./tree.h" ><![CDATA[		return root;]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="4" line="682" file="./tree.h" ><![CDATA[			X=pfound->Right();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Illa]]></key>		<Transplant><key><![CDATA[Illa]]></key><key><![CDATA[Hwa]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source clrs="23" line="599" file="./tree.h" ><![CDATA[			black(node);																																		]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="7" line="688" file="./tree.h" ><![CDATA[				X=pfound->Left();															]]></Source>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Luz]]></key>		<RotateRight><key><![CDATA[Lyla]]></key><key><![CDATA[Luz]]></key><Source line="232" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Right() ) node->Parent()->SetRight(other);]]></Source></RotateRight><Number>4</Number>		<RotateLeft><key><![CDATA[Luci]]></key><key><![CDATA[Luz]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source></RotateLeft>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Lynn]]></key><Number>4</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Nick]]></key><Number>4</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Alta]]></key><Number>3</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Lona]]></key><Number>4</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Chan]]></key><Number>3</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Lise]]></key><Number>3</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Sima]]></key><Number>4</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Gena]]></key><Number>3</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Hugh]]></key>		<RotateLeft><key><![CDATA[Gena]]></key><key><![CDATA[Hugh]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source></RotateLeft><Number>4</Number>		<RotateRight><key><![CDATA[Hwa]]></key><key><![CDATA[Hugh]]></key><Source line="232" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Right() ) node->Parent()->SetRight(other);]]></Source></RotateRight>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Skye]]></key>		<RotateLeft><key><![CDATA[Rina]]></key><key><![CDATA[Sima]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source></RotateLeft><Number>5</Number>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Liz]]></key><Number>4</Number></Item>	<Item 
		erse="true"
	><key><![CDATA[Nida]]></key>		<Transplant><key><![CDATA[Nida]]></key><key><![CDATA[Nick]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source clrs="23" line="599" file="./tree.h" ><![CDATA[			black(node);																																		]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="7" line="688" file="./tree.h" ><![CDATA[				X=pfound->Left();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Ocie]]></key>		<Transplant><key><![CDATA[Rina]]></key><key><![CDATA[NIL]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source>		<Transplant><key><![CDATA[Ocie]]></key><key><![CDATA[Rina]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source line="713" file="./tree.h" ><![CDATA[		return root;]]></Source></Transplant><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="9" line="692" file="./tree.h" ><![CDATA[				Y=(pfound->Right()->LeftMost());							]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Eliz]]></key>		<Transplant><key><![CDATA[Eliz]]></key><key><![CDATA[Asha]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source><Source clrs="3" line="530" file="./tree.h" ><![CDATA[					Trunk* other(node->Parent()->Right());																			]]></Source><Source clrs="12" line="546" file="./tree.h" ><![CDATA[						if (color(other->Right()) == BLACK)																				]]></Source><Source clrs="17" line="555" file="./tree.h" ><![CDATA[						CopyColor(node->Parent(),other);																					]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source>		<RotateLeft><key><![CDATA[Ezra]]></key><key><![CDATA[Jeff]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source><Source clrs="23" line="599" file="./tree.h" ><![CDATA[			black(node);																																		]]></Source></RotateLeft><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="7" line="688" file="./tree.h" ><![CDATA[				X=pfound->Left();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Chan]]></key>		<Transplant><key><![CDATA[Chan]]></key><key><![CDATA[NIL]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source line="713" file="./tree.h" ><![CDATA[		return root;]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="4" line="682" file="./tree.h" ><![CDATA[			X=pfound->Right();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Susy]]></key>		<Transplant><key><![CDATA[Susy]]></key><key><![CDATA[NIL]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="4" line="682" file="./tree.h" ><![CDATA[			X=pfound->Right();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Alta]]></key>		<Transplant><key><![CDATA[Alta]]></key><key><![CDATA[NIL]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source><Source line="713" file="./tree.h" ><![CDATA[		return root;]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="4" line="682" file="./tree.h" ><![CDATA[			X=pfound->Right();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Lacy]]></key>		<Transplant><key><![CDATA[Lacy]]></key><key><![CDATA[Lise]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source clrs="23" line="599" file="./tree.h" ><![CDATA[			black(node);																																		]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="9" line="692" file="./tree.h" ><![CDATA[				Y=(pfound->Right()->LeftMost());							]]></Source><Source clrs="13" line="698" file="./tree.h" ><![CDATA[					X->SetParent(Y);														]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Luz]]></key>		<Transplant><key><![CDATA[Luz]]></key><key><![CDATA[Lyla]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source clrs="23" line="599" file="./tree.h" ><![CDATA[			black(node);																																		]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="9" line="692" file="./tree.h" ><![CDATA[				Y=(pfound->Right()->LeftMost());							]]></Source><Source clrs="13" line="698" file="./tree.h" ><![CDATA[					X->SetParent(Y);														]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Luci]]></key>		<Transplant><key><![CDATA[Luci]]></key><key><![CDATA[Lona]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source clrs="23" line="599" file="./tree.h" ><![CDATA[			black(node);																																		]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="7" line="688" file="./tree.h" ><![CDATA[				X=pfound->Left();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Zada]]></key>		<Transplant><key><![CDATA[Zada]]></key><key><![CDATA[NIL]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="4" line="682" file="./tree.h" ><![CDATA[			X=pfound->Right();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Viki]]></key>		<Transplant><key><![CDATA[Viki]]></key><key><![CDATA[NIL]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="4" line="682" file="./tree.h" ><![CDATA[			X=pfound->Right();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Sima]]></key>		<Transplant><key><![CDATA[Sima]]></key><key><![CDATA[Skye]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source clrs="23" line="599" file="./tree.h" ><![CDATA[			black(node);																																		]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="4" line="682" file="./tree.h" ><![CDATA[			X=pfound->Right();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Jeff]]></key>		<Transplant><key><![CDATA[Jeni]]></key><key><![CDATA[NIL]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source>		<Transplant><key><![CDATA[Jeff]]></key><key><![CDATA[Jeni]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source></Transplant><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="9" line="692" file="./tree.h" ><![CDATA[				Y=(pfound->Right()->LeftMost());							]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Hugh]]></key>		<Transplant><key><![CDATA[Hugh]]></key><key><![CDATA[Hwa]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source line="713" file="./tree.h" ><![CDATA[		return root;]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="9" line="692" file="./tree.h" ><![CDATA[				Y=(pfound->Right()->LeftMost());							]]></Source><Source clrs="13" line="698" file="./tree.h" ><![CDATA[					X->SetParent(Y);														]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Liza]]></key>		<Transplant><key><![CDATA[Lona]]></key><key><![CDATA[NIL]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source>		<Transplant><key><![CDATA[Liza]]></key><key><![CDATA[Lona]]></key><Source line="444" file="./tree.h" ><![CDATA[			ret=v;]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source></Transplant><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="9" line="692" file="./tree.h" ><![CDATA[				Y=(pfound->Right()->LeftMost());							]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Skye]]></key>		<Transplant><key><![CDATA[Skye]]></key><key><![CDATA[NIL]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="4" line="682" file="./tree.h" ><![CDATA[			X=pfound->Right();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Lynn]]></key>		<Transplant><key><![CDATA[Lynn]]></key><key><![CDATA[NIL]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="4" line="682" file="./tree.h" ><![CDATA[			X=pfound->Right();															]]></Source>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Anh]]></key><Number>3</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Pa]]></key><Number>4</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Drew]]></key><Number>3</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Kasi]]></key><Number>2</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Hugh]]></key>		<RotateLeft><key><![CDATA[Gena]]></key><key><![CDATA[Hugh]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source></RotateLeft><Number>4</Number>		<RotateRight><key><![CDATA[Hwa]]></key><key><![CDATA[Hugh]]></key><Source line="232" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Right() ) node->Parent()->SetRight(other);]]></Source></RotateRight>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Les]]></key>		<RotateLeft><key><![CDATA[Kasi]]></key><key><![CDATA[Les]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source></RotateLeft><Number>3</Number>		<RotateRight><key><![CDATA[Lise]]></key><key><![CDATA[Les]]></key><Source line="232" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Right() ) node->Parent()->SetRight(other);]]></Source></RotateRight>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Len]]></key><Number>3</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Jake]]></key><Number>4</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Jim]]></key><Number>3</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Minh]]></key><Number>3</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Tana]]></key><Number>1</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Vito]]></key><Number>2</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Jae]]></key>		<RotateRight><key><![CDATA[Jake]]></key><key><![CDATA[Jae]]></key><Source line="232" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Right() ) node->Parent()->SetRight(other);]]></Source></RotateRight><Number>5</Number>		<RotateLeft><key><![CDATA[Hwa]]></key><key><![CDATA[Jae]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source></RotateLeft>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Dung]]></key><Number>4</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Joe]]></key>		<RotateRight><key><![CDATA[Les]]></key><key><![CDATA[Kasi]]></key><Source line="232" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Right() ) node->Parent()->SetRight(other);]]></Source></RotateRight><Number>4</Number>		<RotateLeft><key><![CDATA[Jeni]]></key><key><![CDATA[Kasi]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source></RotateLeft>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Sade]]></key><Number>3</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Sima]]></key>		<RotateLeft><key><![CDATA[Rina]]></key><key><![CDATA[Sade]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source></RotateLeft><Number>4</Number>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Edna]]></key>		<RotateLeft><key><![CDATA[Drew]]></key><key><![CDATA[Dung]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source></RotateLeft><Number>6</Number>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Lino]]></key><Number>3</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Hyon]]></key><Number>6</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Amos]]></key><Number>5</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Ara]]></key><Number>5</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Asa]]></key><Number>6</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Neva]]></key><Number>5</Number></Item>	<Item 
		erse="true"
	><key><![CDATA[Kasi]]></key>		<Transplant><key><![CDATA[Len]]></key><key><![CDATA[NIL]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source>		<Transplant><key><![CDATA[Kasi]]></key><key><![CDATA[Len]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source></Transplant><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="9" line="692" file="./tree.h" ><![CDATA[				Y=(pfound->Right()->LeftMost());							]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Len]]></key>		<Transplant><key><![CDATA[Len]]></key><key><![CDATA[Les]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source><Source clrs="3" line="565" file="./tree.h" ><![CDATA[					Trunk* other(node->Parent()->Left());																				]]></Source><Source clrs="12" line="581" file="./tree.h" ><![CDATA[						if (color(other->Left()) == BLACK)																				]]></Source><Source clrs="17" line="590" file="./tree.h" ><![CDATA[						CopyColor(node->Parent(),other);																					]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source>		<RotateRight><key><![CDATA[Les]]></key><key><![CDATA[Jeni]]></key><Source line="232" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Right() ) node->Parent()->SetRight(other);]]></Source><Source clrs="23" line="599" file="./tree.h" ><![CDATA[			black(node);																																		]]></Source></RotateRight><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="9" line="692" file="./tree.h" ><![CDATA[				Y=(pfound->Right()->LeftMost());							]]></Source><Source clrs="13" line="698" file="./tree.h" ><![CDATA[					X->SetParent(Y);														]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Lona]]></key>		<Transplant><key><![CDATA[Lyla]]></key><key><![CDATA[Minh]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source>		<Transplant><key><![CDATA[Lona]]></key><key><![CDATA[Lyla]]></key><Source line="444" file="./tree.h" ><![CDATA[			ret=v;]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source clrs="23" line="599" file="./tree.h" ><![CDATA[			black(node);																																		]]></Source></Transplant><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="9" line="692" file="./tree.h" ><![CDATA[				Y=(pfound->Right()->LeftMost());							]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Ara]]></key>		<Transplant><key><![CDATA[Ara]]></key><key><![CDATA[Asa]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source clrs="23" line="599" file="./tree.h" ><![CDATA[			black(node);																																		]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="4" line="682" file="./tree.h" ><![CDATA[			X=pfound->Right();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Jae]]></key>		<Transplant><key><![CDATA[Jae]]></key><key><![CDATA[Jake]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="9" line="692" file="./tree.h" ><![CDATA[				Y=(pfound->Right()->LeftMost());							]]></Source><Source clrs="13" line="698" file="./tree.h" ><![CDATA[					X->SetParent(Y);														]]></Source>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Roma]]></key><Number>4</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Lili]]></key>		<RotateRight><key><![CDATA[Lise]]></key><key><![CDATA[Lino]]></key><Source line="232" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Right() ) node->Parent()->SetRight(other);]]></Source></RotateRight><Number>4</Number>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Gina]]></key><Number>4</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Andy]]></key><Number>5</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Doug]]></key><Number>5</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Lola]]></key><Number>5</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Eliz]]></key><Number>5</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Lady]]></key>		<RotateLeft><key><![CDATA[Jim]]></key><key><![CDATA[Joe]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source></RotateLeft><Number>4</Number>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Zula]]></key>		<RotateLeft><key><![CDATA[Tana]]></key><key><![CDATA[Vito]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source></RotateLeft><Number>3</Number>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Riva]]></key>		<RotateRight><key><![CDATA[Roma]]></key><key><![CDATA[Riva]]></key><Source line="232" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Right() ) node->Parent()->SetRight(other);]]></Source></RotateRight><Number>5</Number>		<RotateLeft><key><![CDATA[Rina]]></key><key><![CDATA[Riva]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source></RotateLeft>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Loyd]]></key>		<RotateLeft><key><![CDATA[Liz]]></key><key><![CDATA[Lola]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source></RotateLeft><Number>6</Number>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Tori]]></key><Number>3</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Ora]]></key>		<RotateRight><key><![CDATA[Sade]]></key><key><![CDATA[Riva]]></key><Source line="232" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Right() ) node->Parent()->SetRight(other);]]></Source></RotateRight><Number>7</Number>		<RotateLeft><key><![CDATA[Moon]]></key><key><![CDATA[Riva]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source></RotateLeft>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Lana]]></key><Number>4</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Faye]]></key><Number>4</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Sari]]></key><Number>4</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Ta]]></key><Number>3</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Jann]]></key>		<RotateLeft><key><![CDATA[Hugh]]></key><key><![CDATA[Jake]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source></RotateLeft><Number>4</Number>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Teri]]></key>		<RotateRight><key><![CDATA[Vito]]></key><key><![CDATA[Tana]]></key><Source line="232" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Right() ) node->Parent()->SetRight(other);]]></Source></RotateRight><Number>4</Number>		<RotateLeft><key><![CDATA[Son]]></key><key><![CDATA[Tana]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source></RotateLeft>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Abe]]></key><Number>5</Number></Item>	<Item 
		erse="true"
	><key><![CDATA[Dung]]></key>		<Transplant><key><![CDATA[Dung]]></key><key><![CDATA[Edna]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source clrs="23" line="599" file="./tree.h" ><![CDATA[			black(node);																																		]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="9" line="692" file="./tree.h" ><![CDATA[				Y=(pfound->Right()->LeftMost());							]]></Source><Source clrs="13" line="698" file="./tree.h" ><![CDATA[					X->SetParent(Y);														]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Zula]]></key>		<Transplant><key><![CDATA[Zula]]></key><key><![CDATA[NIL]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="4" line="682" file="./tree.h" ><![CDATA[			X=pfound->Right();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Liz]]></key>		<Transplant><key><![CDATA[Liz]]></key><key><![CDATA[NIL]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source><Source line="713" file="./tree.h" ><![CDATA[		return root;]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="4" line="682" file="./tree.h" ><![CDATA[			X=pfound->Right();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Pa]]></key>		<Transplant><key><![CDATA[Pa]]></key><key><![CDATA[Ora]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source clrs="23" line="599" file="./tree.h" ><![CDATA[			black(node);																																		]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="7" line="688" file="./tree.h" ><![CDATA[				X=pfound->Left();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Gena]]></key>		<Transplant><key><![CDATA[Gena]]></key><key><![CDATA[Gina]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source><Source line="713" file="./tree.h" ><![CDATA[		return root;]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="9" line="692" file="./tree.h" ><![CDATA[				Y=(pfound->Right()->LeftMost());							]]></Source><Source clrs="13" line="698" file="./tree.h" ><![CDATA[					X->SetParent(Y);														]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Edna]]></key>		<Transplant><key><![CDATA[Edna]]></key><key><![CDATA[Eliz]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="9" line="692" file="./tree.h" ><![CDATA[				Y=(pfound->Right()->LeftMost());							]]></Source><Source clrs="13" line="698" file="./tree.h" ><![CDATA[					X->SetParent(Y);														]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Roma]]></key>		<Transplant><key><![CDATA[Roma]]></key><key><![CDATA[NIL]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="4" line="682" file="./tree.h" ><![CDATA[			X=pfound->Right();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Anh]]></key>		<Transplant><key><![CDATA[Anh]]></key><key><![CDATA[Asa]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="9" line="692" file="./tree.h" ><![CDATA[				Y=(pfound->Right()->LeftMost());							]]></Source><Source clrs="13" line="698" file="./tree.h" ><![CDATA[					X->SetParent(Y);														]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Abe]]></key>		<Transplant><key><![CDATA[Abe]]></key><key><![CDATA[NIL]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source><Source line="713" file="./tree.h" ><![CDATA[		return root;]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="4" line="682" file="./tree.h" ><![CDATA[			X=pfound->Right();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Jeni]]></key>		<Transplant><key><![CDATA[Jim]]></key><key><![CDATA[NIL]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source>		<Transplant><key><![CDATA[Jeni]]></key><key><![CDATA[Jim]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source></Transplant><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="9" line="692" file="./tree.h" ><![CDATA[				Y=(pfound->Right()->LeftMost());							]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Ora]]></key>		<Transplant><key><![CDATA[Ora]]></key><key><![CDATA[NIL]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="4" line="682" file="./tree.h" ><![CDATA[			X=pfound->Right();															]]></Source>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Sana]]></key>		<RotateRight><key><![CDATA[Sima]]></key><key><![CDATA[Sari]]></key><Source line="232" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Right() ) node->Parent()->SetRight(other);]]></Source></RotateRight><Number>6</Number>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Ward]]></key><Number>2</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Gena]]></key>		<RotateLeft><key><![CDATA[Faye]]></key><key><![CDATA[Gena]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source></RotateLeft><Number>6</Number>		<RotateRight><key><![CDATA[Gina]]></key><key><![CDATA[Gena]]></key><Source line="232" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Right() ) node->Parent()->SetRight(other);]]></Source></RotateRight>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Sha]]></key><Number>6</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Edda]]></key><Number>5</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Elna]]></key><Number>4</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Vi]]></key><Number>3</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Su]]></key><Number>3</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Lon]]></key>		<RotateRight><key><![CDATA[Loyd]]></key><key><![CDATA[Lon]]></key><Source line="232" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Right() ) node->Parent()->SetRight(other);]]></Source></RotateRight><Number>6</Number>		<RotateLeft><key><![CDATA[Lola]]></key><key><![CDATA[Lon]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source></RotateLeft>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Bret]]></key><Number>6</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Dell]]></key>		<RotateLeft><key><![CDATA[Bret]]></key><key><![CDATA[Dell]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source></RotateLeft><Number>7</Number>		<RotateRight><key><![CDATA[Doug]]></key><key><![CDATA[Dell]]></key><Source line="232" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Right() ) node->Parent()->SetRight(other);]]></Source></RotateRight>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Mia]]></key><Number>5</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Milo]]></key>		<RotateLeft><key><![CDATA[Mia]]></key><key><![CDATA[Milo]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source></RotateLeft><Number>6</Number>		<RotateRight><key><![CDATA[Minh]]></key><key><![CDATA[Milo]]></key><Source line="232" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Right() ) node->Parent()->SetRight(other);]]></Source></RotateRight>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Neda]]></key><Number>7</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Lee]]></key>		<RotateLeft><key><![CDATA[Lady]]></key><key><![CDATA[Lana]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source></RotateLeft><Number>5</Number>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Ora]]></key>		<RotateLeft><key><![CDATA[Nick]]></key><key><![CDATA[Ora]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source></RotateLeft><Number>6</Number>		<RotateRight><key><![CDATA[Rina]]></key><key><![CDATA[Ora]]></key><Source line="232" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Right() ) node->Parent()->SetRight(other);]]></Source></RotateRight>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Jude]]></key>		<RotateLeft><key><![CDATA[Joe]]></key><key><![CDATA[Lana]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source></RotateLeft><Number>5</Number>		<RotateRight><key><![CDATA[Les]]></key><key><![CDATA[Lana]]></key><Source line="232" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Right() ) node->Parent()->SetRight(other);]]></Source></RotateRight>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Huey]]></key><Number>6</Number></Item>	<Item 
		insrt="true"
	><key><![CDATA[Ling]]></key><Number>5</Number></Item>	<Item 
		erse="true"
	><key><![CDATA[Doug]]></key>		<Transplant><key><![CDATA[Doug]]></key><key><![CDATA[NIL]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source line="713" file="./tree.h" ><![CDATA[		return root;]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="4" line="682" file="./tree.h" ><![CDATA[			X=pfound->Right();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Lon]]></key>		<Transplant><key><![CDATA[Lon]]></key><key><![CDATA[Loyd]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source line="713" file="./tree.h" ><![CDATA[		return root;]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="9" line="692" file="./tree.h" ><![CDATA[				Y=(pfound->Right()->LeftMost());							]]></Source><Source clrs="13" line="698" file="./tree.h" ><![CDATA[					X->SetParent(Y);														]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Jake]]></key>		<Transplant><key><![CDATA[Jake]]></key><key><![CDATA[Jann]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="9" line="692" file="./tree.h" ><![CDATA[				Y=(pfound->Right()->LeftMost());							]]></Source><Source clrs="13" line="698" file="./tree.h" ><![CDATA[					X->SetParent(Y);														]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Nick]]></key>		<Transplant><key><![CDATA[Nick]]></key><key><![CDATA[Neva]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source><Source line="713" file="./tree.h" ><![CDATA[		return root;]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="7" line="688" file="./tree.h" ><![CDATA[				X=pfound->Left();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Drew]]></key>		<Transplant><key><![CDATA[Drew]]></key><key><![CDATA[Edda]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="9" line="692" file="./tree.h" ><![CDATA[				Y=(pfound->Right()->LeftMost());							]]></Source><Source clrs="13" line="698" file="./tree.h" ><![CDATA[					X->SetParent(Y);														]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Sana]]></key>		<Transplant><key><![CDATA[Sana]]></key><key><![CDATA[NIL]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="4" line="682" file="./tree.h" ><![CDATA[			X=pfound->Right();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Amos]]></key>		<Transplant><key><![CDATA[Amos]]></key><key><![CDATA[Andy]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source clrs="23" line="599" file="./tree.h" ><![CDATA[			black(node);																																		]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="4" line="682" file="./tree.h" ><![CDATA[			X=pfound->Right();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Ta]]></key>		<Transplant><key><![CDATA[Ta]]></key><key><![CDATA[Su]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source clrs="23" line="599" file="./tree.h" ><![CDATA[			black(node);																																		]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="7" line="688" file="./tree.h" ><![CDATA[				X=pfound->Left();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Tana]]></key>		<Transplant><key><![CDATA[Teri]]></key><key><![CDATA[NIL]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source>		<Transplant><key><![CDATA[Tana]]></key><key><![CDATA[Teri]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source line="713" file="./tree.h" ><![CDATA[		return root;]]></Source></Transplant><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="9" line="692" file="./tree.h" ><![CDATA[				Y=(pfound->Right()->LeftMost());							]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Minh]]></key>		<Transplant><key><![CDATA[Minh]]></key><key><![CDATA[NIL]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source line="713" file="./tree.h" ><![CDATA[		return root;]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="4" line="682" file="./tree.h" ><![CDATA[			X=pfound->Right();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Milo]]></key>		<Transplant><key><![CDATA[Milo]]></key><key><![CDATA[Mia]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source clrs="23" line="599" file="./tree.h" ><![CDATA[			black(node);																																		]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="7" line="688" file="./tree.h" ><![CDATA[				X=pfound->Left();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Lana]]></key>		<Transplant><key><![CDATA[Lee]]></key><key><![CDATA[NIL]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source>		<Transplant><key><![CDATA[Lana]]></key><key><![CDATA[Lee]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source></Transplant><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="9" line="692" file="./tree.h" ><![CDATA[				Y=(pfound->Right()->LeftMost());							]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Les]]></key>		<Transplant><key><![CDATA[Les]]></key><key><![CDATA[Lino]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source clrs="23" line="599" file="./tree.h" ><![CDATA[			black(node);																																		]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="4" line="682" file="./tree.h" ><![CDATA[			X=pfound->Right();															]]></Source>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Jade]]></key>		<RotateLeft><key><![CDATA[Hwa]]></key><key><![CDATA[Hyon]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source></RotateLeft><Number>6</Number>	</Item>	<Item 
		insrt="true"
	><key><![CDATA[Juan]]></key>		<RotateRight><key><![CDATA[Lady]]></key><key><![CDATA[Jude]]></key><Source line="232" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Right() ) node->Parent()->SetRight(other);]]></Source></RotateRight><Number>5</Number>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Lady]]></key>		<Transplant><key><![CDATA[Lady]]></key><key><![CDATA[NIL]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source line="713" file="./tree.h" ><![CDATA[		return root;]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="4" line="682" file="./tree.h" ><![CDATA[			X=pfound->Right();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Son]]></key>		<Transplant><key><![CDATA[Son]]></key><key><![CDATA[Su]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="9" line="692" file="./tree.h" ><![CDATA[				Y=(pfound->Right()->LeftMost());							]]></Source><Source clrs="13" line="698" file="./tree.h" ><![CDATA[					X->SetParent(Y);														]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Ora]]></key>		<Transplant><key><![CDATA[Ora]]></key><key><![CDATA[Rina]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source line="713" file="./tree.h" ><![CDATA[		return root;]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="9" line="692" file="./tree.h" ><![CDATA[				Y=(pfound->Right()->LeftMost());							]]></Source><Source clrs="13" line="698" file="./tree.h" ><![CDATA[					X->SetParent(Y);														]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Bret]]></key>		<Transplant><key><![CDATA[Bret]]></key><key><![CDATA[NIL]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source><Source line="713" file="./tree.h" ><![CDATA[		return root;]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="4" line="682" file="./tree.h" ><![CDATA[			X=pfound->Right();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Riva]]></key>		<Transplant><key><![CDATA[Riva]]></key><key><![CDATA[Sade]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source clrs="23" line="599" file="./tree.h" ><![CDATA[			black(node);																																		]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="9" line="692" file="./tree.h" ><![CDATA[				Y=(pfound->Right()->LeftMost());							]]></Source><Source clrs="13" line="698" file="./tree.h" ><![CDATA[					X->SetParent(Y);														]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Lise]]></key>		<Transplant><key><![CDATA[Lise]]></key><key><![CDATA[Loyd]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source><Source clrs="3" line="565" file="./tree.h" ><![CDATA[					Trunk* other(node->Parent()->Left());																				]]></Source><Source clrs="12" line="581" file="./tree.h" ><![CDATA[						if (color(other->Left()) == BLACK)																				]]></Source><Source clrs="13" line="584" file="./tree.h" ><![CDATA[							black(other->Right());																									]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source>		<RotateLeft><key><![CDATA[Lili]]></key><key><![CDATA[Ling]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source><Source clrs="17" line="590" file="./tree.h" ><![CDATA[						CopyColor(node->Parent(),other);																					]]></Source></RotateLeft><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source>		<RotateRight><key><![CDATA[Lino]]></key><key><![CDATA[Ling]]></key><Source line="232" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Right() ) node->Parent()->SetRight(other);]]></Source><Source clrs="23" line="599" file="./tree.h" ><![CDATA[			black(node);																																		]]></Source></RotateRight><Source clrs="4" line="682" file="./tree.h" ><![CDATA[			X=pfound->Right();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Asa]]></key>		<Transplant><key><![CDATA[Asa]]></key><key><![CDATA[Andy]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source><Source clrs="3" line="530" file="./tree.h" ><![CDATA[					Trunk* other(node->Parent()->Right());																			]]></Source><Source clrs="12" line="546" file="./tree.h" ><![CDATA[						if (color(other->Right()) == BLACK)																				]]></Source><Source clrs="17" line="555" file="./tree.h" ><![CDATA[						CopyColor(node->Parent(),other);																					]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source>		<RotateLeft><key><![CDATA[Asha]]></key><key><![CDATA[Eliz]]></key><Source line="206" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Left() ) node->Parent()->SetLeft(other);]]></Source><Source clrs="23" line="599" file="./tree.h" ><![CDATA[			black(node);																																		]]></Source></RotateLeft><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="7" line="688" file="./tree.h" ><![CDATA[				X=pfound->Left();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Elna]]></key>		<Transplant><key><![CDATA[Elna]]></key><key><![CDATA[NIL]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="4" line="682" file="./tree.h" ><![CDATA[			X=pfound->Right();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Jann]]></key>		<Transplant><key><![CDATA[Jann]]></key><key><![CDATA[Hugh]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source line="713" file="./tree.h" ><![CDATA[		return root;]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="7" line="688" file="./tree.h" ><![CDATA[				X=pfound->Left();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Huey]]></key>		<Transplant><key><![CDATA[Huey]]></key><key><![CDATA[NIL]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source line="713" file="./tree.h" ><![CDATA[		return root;]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="4" line="682" file="./tree.h" ><![CDATA[			X=pfound->Right();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Sari]]></key>		<Transplant><key><![CDATA[Sari]]></key><key><![CDATA[Sima]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source><Source clrs="3" line="565" file="./tree.h" ><![CDATA[					Trunk* other(node->Parent()->Left());																				]]></Source><Source clrs="10" line="577" file="./tree.h" ><![CDATA[						red(other);																																]]></Source><Source clrs="23" line="599" file="./tree.h" ><![CDATA[			black(node);																																		]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="4" line="682" file="./tree.h" ><![CDATA[			X=pfound->Right();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Vi]]></key>		<Transplant><key><![CDATA[Vi]]></key><key><![CDATA[NIL]]></key><Source line="452" file="./tree.h" ><![CDATA[				u->Parent()->SetRight(v);]]></Source><Source line="713" file="./tree.h" ><![CDATA[		return root;]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="4" line="682" file="./tree.h" ><![CDATA[			X=pfound->Right();															]]></Source>	</Item>	<Item 
		erse="true"
	><key><![CDATA[Joe]]></key>		<Transplant><key><![CDATA[Joe]]></key><key><![CDATA[Jude]]></key><Source line="449" file="./tree.h" ><![CDATA[				u->Parent()->SetLeft(v);]]></Source><Source clrs="1" line="522" file="./tree.h" ><![CDATA[			while ( (node!=root) and (color(node) == BLACK) )																]]></Source><Source line="525" file="./tree.h" ><![CDATA[				if (!node) return black(root);]]></Source><Source clrs="3" line="530" file="./tree.h" ><![CDATA[					Trunk* other(node->Parent()->Right());																			]]></Source><Source clrs="10" line="542" file="./tree.h" ><![CDATA[						red(other);																																]]></Source><Source clrs="3" line="565" file="./tree.h" ><![CDATA[					Trunk* other(node->Parent()->Left());																				]]></Source><Source clrs="12" line="581" file="./tree.h" ><![CDATA[						if (color(other->Left()) == BLACK)																				]]></Source><Source clrs="17" line="590" file="./tree.h" ><![CDATA[						CopyColor(node->Parent(),other);																					]]></Source></Transplant><Source line="656" file="./tree.h" ><![CDATA[			Trunk *p(found->Parent()),*l(found->Left()),*r(found->Right());]]></Source>		<RotateRight><key><![CDATA[Jim]]></key><key><![CDATA[Ezra]]></key><Source line="232" file="./tree.h" ><![CDATA[			if ( node == node->Parent()->Right() ) node->Parent()->SetRight(other);]]></Source><Source clrs="23" line="599" file="./tree.h" ><![CDATA[			black(node);																																		]]></Source></RotateRight><Source line="675" file="./tree.h" ><![CDATA[		Trunk& me(static_cast<Trunk&>(*this));]]></Source><Source clrs="4" line="682" file="./tree.h" ><![CDATA[			X=pfound->Right();															]]></Source>	</Item></Tree>